#!/usr/bin/python
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

DOCUMENTATION = '''
---
module: ec2_instances
short_description: get all instances information from EC2
description:
    - This module gets instances information from EC2
version_added: 1.6
options:
    filters:
      - Optional filters that can be used to limit the results returned. Filters are provided in the form of a dictionary consisting of filter names as the key and filter values as the value. The set of allowable filter names/values is dependent on the request being performed. Check the EC2 API guide for details.
    required: false
  instance_ids:
    description:
      - A list of strings of instance IDs
    required: false
  max_results:
    description:
      - The maximum number of paginated instance items per response.
    required: false
  ec2_url:
    description:
      - URL to use to connect to EC2-compatible cloud (by default the module will use EC2 endpoints)
    required: false
    default: null
    aliases: [ EC2_URL ]
  ec2_access_key:
    description:
      - EC2 access key. If not specified then the EC2_ACCESS_KEY environment variable is used.
    required: false
    default: null
    aliases: [ EC2_ACCESS_KEY ]
  ec2_secret_key:
    description:
      - EC2 secret key. If not specified then the EC2_SECRET_KEY environment variable is used.
    required: false
    default: null
    aliases: [ EC2_SECRET_KEY ]
  region:
    description:
      - the EC2 region to use
    required: true
    default: "us-east-1"
    aliases: [ ec2_region ]
  validate_certs:
    description:
      - When set to "no", SSL certificates will not be validated for boto versions >= 2.6.0.
    required: false
    default: "yes"
    choices: ["yes", "no"]
    aliases: []
    version_added: "1.5"
  profile:
    description:
      - uses a boto profile. Only works with boto >= 2.24.0
    required: false
    default: null
    aliases: []
    version_added: "1.6"
  security_token:
    description:
      - security token to authenticate against AWS
    required: false
    default: null
    aliases: []
    version_added: "1.6"

requirements: [ "boto" ]
author: Bernat Rafales <bernat@rafales-mulet.com>
notes:
   - This module will get instance info from EC2
'''

EXAMPLES = '''
  ec2_instances:
    region: "eu-west-1"
'''

try:
    import boto.ec2
except ImportError:
    boto_found = False
else:
    boto_found = True

def main():
    argument_spec = ec2_argument_spec()
    argument_spec.update(dict(
            filters = dict(required=False, type='dict'),
            instance_ids = dict(required=False, type='list'),
            max_results = dict(required=False, type='int')
        )
    )

    module = AnsibleModule(
        argument_spec = argument_spec
    )

    if not boto_found:
        module.fail_json(msg="boto is required")

    ec2 = ec2_connect(module)

    filters = module.params.get('filters')
    instance_ids = module.params.get('instance_ids')
    max_results = module.params.get('max_results')

    try:
        reservations = ec2.get_all_reservations(instance_ids=instance_ids, filters=filters, max_results=max_results)
        instances = [i for r in reservations for i in r.instances]
        module.exit_json(changed=False, instances=dict([(i.tags['Name'], i.id) for i in instances if 'Name' in i.tags and i.state != 'terminated']))
    except boto.exception.EC2ResponseError, e:
        module.fail_json(msg=str(e))


# import module snippets
from ansible.module_utils.basic import *
from ansible.module_utils.ec2 import *

if __name__ == '__main__':
    main()

